<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>AUT_TestReport</name>
        <uuid>_a-0000dc59-a427-8000-ba62-01ef9001ef90_2442</uuid>
        <description>Simple Report to test report is working </description>
        <parentUuid>_a-0000dc59-a427-8000-ba62-01ef9001ef90_2422</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>=load(
  local!departments: {&quot;HR&quot;, &quot;Marketing&quot;, &quot;Sales&quot;, &quot;IT&quot;},
  #&quot;SYSTEM_SYSRULES_dashboardLayout&quot;(
    firstColumnContents: {
      #&quot;SYSTEM_SYSRULES_sectionLayout&quot;(
        firstColumnContents: {
          #&quot;SYSTEM_SYSRULES_columnChartField&quot;(
            label: &quot;Spending vs. Budget&quot;,
            labelPosition: &quot;ABOVE&quot;,
            categories: local!departments,
            series: {
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Budget&quot;, data: {7000, 12000, 10000, 10000}),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Spent&quot;, data: {3500, 9000, 10500, 8000})
            },
            xAxisTitle: &quot;Department&quot;,
            yAxisTitle: &quot;Amount ($)&quot;,
            stacking: &quot;NONE&quot;,
            showLegend: true,
            showTooltips: true
          ),
          #&quot;SYSTEM_SYSRULES_pieChartField&quot;(
            label: &quot;Spending by Department&quot;,
            labelPosition: &quot;ABOVE&quot;,
            series: {
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;HR&quot;, data: 3500),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Marketing&quot;, data: 9000),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Sales&quot;, data: 10500),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;IT&quot;, data: 8000)
            },
            showDataLabels: true,
            showAsPercentage: true
          ),

        },
        secondColumnContents: {
          #&quot;SYSTEM_SYSRULES_columnChartField&quot;(
            label: &quot;Remaining&quot;,
            labelPosition: &quot;ABOVE&quot;,
            categories: local!departments,
            series: {
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Remaining&quot;, data: {3500, 3000, -500, 2000})
            },
            xAxisTitle: &quot;Department&quot;,
            yAxisTitle: &quot;Amount ($)&quot;,
            stacking: &quot;NONE&quot;,
            showLegend: false,
            showTooltips: true
          ),
          #&quot;SYSTEM_SYSRULES_columnChartField&quot;(
            label: &quot;Spending by Category&quot;,
            labelPosition: &quot;ABOVE&quot;,
            categories: local!departments,
            series: {
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Hardware&quot;, data: {0, 2000, 2000, 6000}),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Software&quot;, data: {0, 1000, 500, 1500}),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Travel&quot;, data: {0, 3000, 4000, 0}),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Recruiting&quot;, data: {1000, 0, 0, 0}),
              #&quot;SYSTEM_SYSRULES_chartSeries&quot;(label: &quot;Miscellaneous&quot;, data: {1500, 3000, 1500, 500})
            },
            xAxisTitle: &quot;Department&quot;,
            yAxisTitle: &quot;Total Purchase Requests&quot;,
            stacking: &quot;NORMAL&quot;,
            showLegend: true,
            showTooltips: true
          )
        }
      )
    },
    secondColumnContents: {}
  )
)</definition>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name/>
            </el>
        </value>
    </typedValue>
</contentHaul> 